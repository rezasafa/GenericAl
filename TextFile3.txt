 public CalculatedData CreateChromosome(int[] Parent, int[] Child)
        {
            int index = 0;
            int next = 0;
            double sum = 0;
            while (index < Child.Length)
            {
                if (index == 0)
                {
                    next = index + 1;
                    if (next < Child.Length)
                    {
                        var find = _scale.Where(v =>
                            ((v.MainDataId == Parent[index]) || (v.MainDataIdNext == Parent[index]))
                            &&
                            ((v.MainDataId == Parent[next]) || (v.MainDataIdNext == Parent[next]))
                        );
                        if (find != null)
                            if (find.Count() > 0)
                                sum += find.First().ScaleValue;

                    }
                }


                index++;
            }

            CalculatedData calculated = new CalculatedData();

            calculated.Parent = Parent;
            calculated.Chromotion = Child;
            calculated.mutationRate = sum;
            calculated.strParent = Create_Chromosome_String(Parent);
            calculated.strChromotion = Create_Chromosome_String(Child);

            return calculated;

        }

        public bool checkInsertChromosome(CalculatedData cd)
        {
            if (cd == null)
                return false;

            var find = _calculatedDatas.Where(v => v.Chromotion == cd.Chromotion);

            if (find != null)
                if (find.Count() > 0)
                {
                    _calculatedDatas.Add(cd);
                    return true;
                }
            return false;
        }